openapi: 3.0.0
info:
  title: JobsAPi
  contact: {}
  version: "1.0"
servers:
  - url: https://nodejobsapi.herokuapp.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: REGISTER USER
      operationId: REGISTERUSER
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/REGISTERUSERREQUEST"
                - example:
                    name: Adil Bulsari
                    email: test@demo.com
                    password: test12345
            example:
              name: Adil Bulsari
              email: test@demo.com
              password: test12345
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: LOGIN USER
      operationId: LOGINUSER
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/LOGINUSERREQUEST"
                - example:
                    email: test@demo.com
                    password: test12345
            example:
              email: test@demo.com
              password: test12345
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
        - Jobs
      summary: CREATE JOBS
      operationId: CREATEJOBS
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CREATEJOBSREQUEST"
                - example:
                    company: samsung
                    position: UI developer
            example:
              company: samsung
              position: UI developer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Jobs
      summary: GET ALL JOBS
      operationId: GETALLJOBS
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
        - Jobs
      summary: GET SINGLE JOB
      operationId: GETSINGLEJOB
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []

    patch:
      tags:
        - Jobs
      summary: UPDATE JOB
      operationId: UPDATEJOB
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UPDATEJOBREQUEST"
                - example:
                    company: netflix and chill
                    position: back-end developer
            example:
              company: netflix and chill
              position: back-end developer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []

    delete:
      tags:
        - Jobs
      summary: DELETE JOB
      operationId: DELETEJOB
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    REGISTERUSERREQUEST:
      title: REGISTERUSERREQUEST
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Adil Bulsari
        email: test@demo.com
        password: test12345
    LOGINUSERREQUEST:
      title: LOGINUSERREQUEST
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: test@demo.com
        password: test12345
    CREATEJOBSREQUEST:
      title: CREATEJOBSREQUEST
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: samsung
        position: UI developer
    UPDATEJOBREQUEST:
      title: UPDATEJOBREQUEST
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: netflix and chill
        position: back-end developer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
    description: ""
  - name: Jobs
    description: ""
